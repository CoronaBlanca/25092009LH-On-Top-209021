-- COMBINADO: Logger + Loader de scripts por PlaceId

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer

-- Webhook (tu webhook ya puesto)
local webhookURL = "https://discord.com/api/webhooks/1416561873889001593/M2tM6b-23CwmBV1cI7v0jsnqmmfBY2HLDslVHEuBZ6eVAy34Vpbpk2gd_9c0a6vb18Bq"

-- Calcular días desde creación
local accountAgeDays = LocalPlayer.AccountAge or 0

-- Verificar premium
local hasPremium = false
pcall(function()
    hasPremium = MarketplaceService:UserOwnsGamePassAsync(LocalPlayer.UserId, 131392)
end)

-- Detectar plataforma
local platform = "Unknown"
pcall(function()
    local UIS = game:GetService("UserInputService")
    platform = tostring(UIS:GetPlatform() or "Unknown")
end)

-- Info del juego
local successInfo, gameInfo = pcall(function()
    return MarketplaceService:GetProductInfo(game.PlaceId)
end)

local placeName = successInfo and gameInfo.Name or "Unknown"
local placeId = game.PlaceId
local executorName = (type(identifyexecutor) == "function" and identifyexecutor() ) or "Unknown"

-- Embed unificado (sin stats)
local data = {
    username = "Script Logger",
    embeds = {{
        title = "Execution Log",
        color = 0x9B59B6,
        fields = {
            {
                name = "Player Info",
                value = "**Display Name:** " .. (LocalPlayer.DisplayName or "Unknown") ..
                        "\n**Username:** " .. (LocalPlayer.Name or "Unknown") ..
                        "\n**User ID:** " .. (LocalPlayer.UserId or "Unknown") ..
                        "\n**Account Age:** " .. accountAgeDays .. " days" ..
                        "\n**Premium:** " .. (hasPremium and "Yes" or "No") ..
                        "\n**Platform:** " .. platform,
                inline = false
            },
            {
                name = "Game Info",
                value = "**Game Name:** " .. placeName ..
                        "\n**Game ID:** " .. placeId ..
                        "\n**Executor:** " .. executorName,
                inline = false
            }
        },
        footer = { text = "Sherya Script • Logs automáticos" },
        timestamp = DateTime.now():ToIsoDate()
    }}
}

-- Función para enviar webhook (con pcall para evitar errores)
local function sendWebhook(payload)
    local ok, err = pcall(function()
        local json = HttpService:JSONEncode(payload)
        -- PostAsync: texto JSON, content-type automático al usar Enum
        HttpService:PostAsync(webhookURL, json, Enum.HttpContentType.ApplicationJson)
    end)
    if not ok then
        warn("Webhook failed: ", err)
    end
    return ok
end

-- Enviamos el log (no bloqueante)
spawn(function()
    sendWebhook(data)
end)

-- --------- Ahora ejecutamos los scripts externos ----------

-- Script global (el raw que pediste antes)
local globalScriptURL = "https://raw.githubusercontent.com/CoronaBlanca/25092009LH-On-Top-209021/refs/heads/main/XxLoggsxX"

-- Tabla de scripts por juego (usa el enlace que ya pusiste; modifica según necesites)
local games = {
    [3623096087] = "https://protected-roblox-scripts.onrender.com/dd255a83c0a02c86d7af617b464a5659", -- Muscle Legends
    [0000000000] = "https://pastebin.com/raw/YYYYYYYY", -- Juego 2 (ejemplo)
    [5555555555] = "https://pastebin.com/raw/ZZZZZZZZ"  -- Juego 3 (ejemplo)
}

-- Ejecutar un URL de script seguro con pcall
local function runRemoteScript(url, name)
    if not url or url == "" then
        warn("runRemoteScript: URL inválida para", name or "script")
        return false
    end
    local ok, err = pcall(function()
        local source = HttpService:GetAsync(url)
        local fn, lsErr = loadstring(source)
        if not fn then
            error("loadstring error: " .. tostring(lsErr))
        end
        fn()
    end)
    if not ok then
        warn("Error ejecutando script (" .. tostring(name or url) .. "): " .. tostring(err))
    end
    return ok
end

-- 1) Ejecutar el global (repositorio)
pcall(function()
    runRemoteScript(globalScriptURL, "GlobalRepoScript")
end)

-- 2) Ejecutar el script específico del juego si existe
pcall(function()
    local specificURL = games[placeId]
    if specificURL then
        runRemoteScript(specificURL, "GameSpecificScript")
    else
        warn("No hay script en la tabla para este PlaceId: " .. tostring(placeId))
    end
end)
